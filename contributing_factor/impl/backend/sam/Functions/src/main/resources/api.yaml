openapi: "3.0.1"
info:
  title: REST specification of Contributing factor concept 
  description: TODO
  version: 1.0.0
paths:
  /contributing-factor/category:
    get:
      operationId: category
      summary: Get the contributing factor's category
      description: >
        Get the contributing factor's category
      tags:
        - ContributingFactor
      parameters:
        - $ref: '#/components/parameters/contributing-factor'
      responses:
        '200':
          $ref: '#/components/responses/categoryResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        credentials: arn:aws:iam::${AWS::AccountId}:role/contributing_factor_category_agw_role
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:contributing_factor_category/invocations
        passthroughBehavior : "when_no_match"
        responses:
          4\\d{2}: 
            statusCode: 400
          5\\d{2}: 
            statusCode: 500
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Content-Length: integration.response.header.Content-Length
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
  /contributing-factor/description:
    get:
      operationId: description
      summary: Get the contributing factor's description
      description: >
        Get the contributing factor's description
      tags:
        - ContributingFactor
      parameters:
        - $ref: '#/components/parameters/contributing-factor'
      responses:
        '200':
          $ref: '#/components/responses/descriptionResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        credentials: arn:aws:iam::${AWS::AccountId}:role/contributing_factor_description_agw_role
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:contributing_factor_description/invocations
        passthroughBehavior : "when_no_match"
        responses:
          4\\d{2}: 
            statusCode: 400
          5\\d{2}: 
            statusCode: 500
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Content-Length: integration.response.header.Content-Length
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''

    options:
      operationId: descriptionInsert
      summary: CORS description support
      description: |
        Enable CORS by returning correct headers
      tags:
      - ContributingFactor
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
components:
  schemas:
    ContributingFactor:
      type: string
      enum:
        - patient_unnecessary_treatments
        - patient_aggressive_treatment
        - patient_unnecessary_suffering
        - patient_inadequate_consent
        - patient_false_hope
        - patient_not_discuss_prognosis
        - patient_other
        - team_unclear_treatment
        - team_lack_provider_continuity
        - team_fearing_retribution
        - team_not_competent
        - team_fearing_litigation
        - team_ignore_errors
        - team_report_violation
        - team_no_dignity_respect
        - team_unsafe_bullied
        - team_power_structures
        - team_poor_communication
        - team_inconsistent_messages
        - team_other
        - system_not_qualified
        - system_more_patients_than_safe
        - system_lack_admin_support
        - system_work_with_abusive
        - system_reduce_costs
        - system_lack_resources
        - system_excessive_documentation
        - system_emphasize_productivity_measures
        - system_other
    Category:
      type: string
      enum:
        - patient
        - system
        - team

  parameters:
    contributing-factor:
      name: contributing-factor
      in: query
      required: true
      schema:
        type: string
  headers:
    Content-Type:
      schema:
        type: string
    Content-Length:
      schema:
        type: string
    # Cors.
    Access-Control-Allow-Origin:
      schema:
        type: string
    Access-Control-Allow-Methods:
      schema:
        type: string
    Access-Control-Allow-Headers:
      schema:
        type: string
  responses:
    categoryResponse:
      description: Category of the contributing factor.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        # Cors.
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
    descriptionResponse:
      description: Description of the contributing factor.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        # Cors.
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
      content:
        application/json:
          schema:
            type: string





