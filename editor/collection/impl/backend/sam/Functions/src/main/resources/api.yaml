openapi: "3.0.1"            # near current version of open api specification
info:
  title: REST specification of Collection concept (for AWS using S3)
  description: TODO
  version: 1.0.0
paths:
  /Collection/insert:
    post:
      operationId: insert
      summary: insert an item into the collection
      description: >
        insert an item into the collection
      tags:
        - Collection
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/bucket'
        - $ref: '#/components/parameters/prefix'
      requestBody:
        $ref: '#/components/requestBodies/collectionItemRequest'
      responses:
        '200':
          $ref: '#/components/responses/collectionResponse'
      x-amazon-apigateway-integration:
        httpMethod: put
        type: aws
        credentials: arn:aws:iam::${AWS::AccountId}:role/collection_insert_agw_role
        passthroughBehavior : "when_no_match"
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:insert/invocations
        responses:
          4\\d{2}: 
            statusCode: 400
          5\\d{2}: 
            statusCode: 500
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Content-Length: integration.response.header.Content-Length
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''

    options:
      operationId: optionsInsert
      summary: CORS insert support
      description: |
        Enable CORS by returning correct headers
      tags:
      - Collection
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  /Collection/remove:   # this "set" is from our concept
    post:
      operationId: remove
      summary: remove an item from the collection
      description: >
        remove an item from the collection
      tags:
        - Collection
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/bucket'
        - $ref: '#/components/parameters/prefix'
      requestBody:
        $ref: '#/components/requestBodies/collectionItemRequest'
      responses:
        '200':
          $ref: '#/components/responses/collectionResponse'
      x-amazon-apigateway-integration:
        httpMethod: put
        type: aws
        credentials: arn:aws:iam::${AWS::AccountId}:role/collection_remove_agw_role
        passthroughBehavior : "when_no_match"
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:remove/invocations
        responses:
          4\\d{2}:
            statusCode: 400
          5\\d{2}:
            statusCode: 500
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Content-Length: integration.response.header.Content-Length
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''

    options:
      operationId: optionsRemove
      summary: CORS remove support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Collection
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}



  /Collection/init:   # this "set" is from our concept
    post:
      operationId: init
      summary: initialize a collection
      description: >
        initialize a collection
      tags:
        - Collection
      parameters:
        - $ref: '#/components/parameters/bucket'
        - $ref: '#/components/parameters/prefix'
      responses:
        '200':
          $ref: '#/components/responses/collectionResponse'
      x-amazon-apigateway-integration:
        httpMethod: put
        type: aws
        credentials: arn:aws:iam::${AWS::AccountId}:role/collection_init_agw_role
        passthroughBehavior : "when_no_match"
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:init/invocations
        responses:
          4\\d{2}:
            statusCode: 400
          5\\d{2}:
            statusCode: 500
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
    options:
      operationId: optionsInit
      summary: CORS init support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Collection
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}

  /Collection/member:   # this "set" is from our concept
    get:
      operationId: member
      summary: Boolean-returning membership predicate function
      description: >
        Boolean-returning membership predicate function
      tags:
        - Collection
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/bucket'
        - $ref: '#/components/parameters/prefix'
      requestBody:
        $ref: '#/components/requestBodies/collectionItemRequest'
      responses:
        '200':
          description: 200 response
          headers:
            # Cors.
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: boolean
      x-amazon-apigateway-integration:
        httpMethod: put
        type: aws
        credentials: arn:aws:iam::${AWS::AccountId}:role/collection_set_agw_role
        passthroughBehavior : "when_no_match"
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:member/invocations
        responses:
          4\\d{2}:
            statusCode: 400
          5\\d{2}:
            statusCode: 500
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
    options:
      operationId: optionsMember
      summary: CORS member support
      description: |
        Enable CORS by returning correct headers
      tags:
        - Collection
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
components:
  schemas:
    CollectionItemPair:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
        item:
          $ref: '#/components/schemas/AnyValue'
    Collection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AnyValue'
    AnyValue: {}
  parameters:
    prefix:
      name: prefix
      in: query
      required: true
      schema:
        type: string
        default: collection/Collection/
    bucket:
      name: bucket
      in: query
      required: true
      schema:
        type: string
        default: jackson-concepts-concepts
    contentType:
      name: Content-Type
      in: header
      required: false
      schema:
        type: string
  requestBodies:
    collectionItemRequest:
      description: A request including a collection X item pair to modify.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectionItemPair'
  responses:
    collectionResponse:
      description: Updated collection representation response.
      headers:
        Content-Type:
          schema:
            type: string
        Content-Length:
          schema:
            type: string
        # Cors.
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Collection'


