openapi: "3.0.1"            # near current version of open api specification
info:
  title: REST specification of Collection concept (for AWS using S3)
  description: TODO
  version: 1.0.0
paths:
  /Collection/get:   # this "get" is from our concept
    get:      # this "get" is HTTP GET method
      operationId: get
      summary: Get Collection
      description: >
        Get the collection
      tags:
        - Collection
      parameters:
        - name: folder
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |-
            200 response
          headers:
            Date:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            # CORS headers.
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'

      # AWS implementation of preceding REST API spec
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetCollection/invocations
        credentials: arn:aws:iam::${AWS::AccountId}:role/collection_get_agw_role
        passthroughBehavior : "when_no_match"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: '''integration.response.header.Content-Type'''
              method.response.header.Date: '''integration.response.header.Date'''
              method.response.header.Content-Length: '''integration.response.header.content-length'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
    options:
      operationId: optionsGetCollection
      summary: getCollection Cors
      description: |
        Enable CORS
      tags:
      - Collection
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}

  /Collection/create:   # this "set" is from our concept
    put:
      operationId: create
      summary: insert an object into the collection
      description: >
        insert an object into the collection
      tags:
        - Collection
      parameters:
        - name: Content-Type
          in: header
          required: false
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
      responses:
        '200':
          description: |-
            200 response
          headers:
            Content-Type:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            # Cors.
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        httpMethod: put
        type: aws
        credentials: arn:aws:iam::${AWS::AccountId}:role/collection_set_agw_role
        passthroughBehavior : "when_no_match"
        requestParameters:
          integration.request.path.object: method.request.path.item
          integration.request.path.bucket: method.request.path.folder
          integration.request.header.Content-Type: method.request.header.Content-Type
        uri: arn:aws:apigateway:${AWS::Region}:s3:path/jackson-concepts-concepts/collection/Collection/{object}
        responses:
          4\\d{2}:
            statusCode: 400
          5\\d{2}:
            statusCode: 500
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Content-Length: integration.response.header.Content-Length
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''

    options:
      operationId: optionsSetCollection
      summary: CORS setCollection support
      description: |
        Enable CORS by returning correct headers
      tags:
      - Collection
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
components:
  schemas:
    Collection:
      type: object
      properties:
        value:
          type: array
          items:
            type: object
