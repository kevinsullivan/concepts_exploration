openapi: "3.0.1"
info:
  title: REST specification of Bool concept (for AWS using S3)
  description: TODO
  version: 1.0.0
paths:
  /Bool/get:
    get:
      operationId: getBool
      summary: Get Bool
      description: >
        Get the Boolean
      tags:
        - Bool
      responses:
        '200':
          description: |-
            200 response
          headers:    # for CORS headers
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bool'
      x-amazon-apigateway-integration:
        httpMethod: get
        type: aws
        uri: arn:aws:apigateway:${AWS::Region}:s3:path/jackson-concepts-concepts/bool/Bool
        credentials: arn:aws:iam::${AWS::AccountId}:role/bool_get_agw_role
        passthroughBehavior : "when_no_match"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
    options:
      operationId: optionsGetBool
      summary: getBool Cors
      description: |
        Enable CORS 
      tags:
      - Bool
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  /Bool/set:
    put:
      operationId: setBool
      summary: Set Bool
      description: >
        Set the boolean
      tags:
        - Bool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bool'
      responses:
        '200':
          description: |-
            200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        httpMethod: put
        type: aws
        uri: arn:aws:apigateway:${AWS::Region}:s3:path/jackson-concepts-concepts/bool/Bool
        credentials: arn:aws:iam::${AWS::AccountId}:role/bool_set_agw_role
        passthroughBehavior : "when_no_match"
        responses:
          4\\d{2}: 
            statusCode: 400
          5\\d{2}: 
            statusCode: 500
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''

    options:
      operationId: optionsSetBool
      summary: CORS setBool support
      description: |
        Enable CORS by returning correct headers
      tags:
      - Bool
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
components:
  schemas:
    Bool:
      type: object
      properties:
        value:
          type: boolean
